" An example for a vimrc file.
"
" Maintainer:	Bram Moolenaar <Bram@vim.org>
" Last change:	2011 Apr 15
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"	      for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"	    for OpenVMS:  sys$login:.vimrc
"

" vi 設定と互換性無しの宣言 (先頭行に記載)
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
		  \ | wincmd p | diffthis
endif

inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"


"========================================
" basic {{{
"========================================

" -----------------
" テキスト表示・タブ関連

set number
set incsearch
set autoindent
set ic
set shiftwidth=2
set tabstop=2
set expandtab

" 特定の言語はタブ幅を変える
augroup vimrc
  autocmd! FileType python setlocal shiftwidth=4 tabstop=4
  autocmd! FileType markdown setlocal shiftwidth=4 tabstop=4
augroup END

" 行80文字のラインを引く
if (exists('+colorcolumn'))
    set colorcolumn=80
    highlight ColorColumn ctermbg=9
endif

" 開いているファイルのディレクトリに自動的に移動
" set autochdir

" ステータスライン for lightline
set laststatus=2

" .mdファイルをmarkdownに紐付け
au BufNewFile,BufRead *.md :set filetype=markdown

" タブの可視化
set listchars=tab:>\

" grep結果をQuickFixに表示
" http://qiita.com/yuku_t/items/0c1aff03949cb1b8fe6b
autocmd QuickFixCmdPost *grep* cwindow

" }}}
"========================================


"========================================
" encoding {{{
"========================================

set termencoding=utf-8
set encoding=cp932
set fileencoding=utf-8
set fileencodings=utf-8,cp932,euc-jp,iso-2022-jp
set ff=unix
set ffs=unix,dos,mac

if exists('&ambiwidth')
  set ambiwidth=double
set fileencodings=utf-8
endif

" }}}
"========================================


"========================================
" for linux {{{
"========================================

if has('win32unix') || has('win64unix') || has('unix')

  set backup
  set backupdir=/tmp
  set directory=/tmp

  if filereadable(expand('~/.vimrc.local'))
    source ~/.vimrc.local
  endif

endif

" }}}
"========================================


"========================================
" for windows {{{
"========================================

if has('win32') || has('win64')

  ""Using with Cygwin"
  " VIM faq-33.6
  " https://github.com/Shougo/shougo-s-github/blob/master/vim/rc/windows.rc.vim
  "set shellcmdflag=-c
	"set shellxquote=\"
	"set shell=bash.exe
	"set shellpipe=2>&1\|\ tee
	"set shellredir=>%s\ 2>&1
	"set grepprg=grep

  set backup
  set backupdir=%temp%
  set directory=%temp%

  if filereadable(expand('c:/vim/vimrc.local'))
    source c:/vim/vimrc.local
  endif

endif

" }}}
"========================================


"========================================
" jp input {{{
"========================================

if has('multi_byte_ime') || has('xim')
  " IME ON時のカーソルの色を設定(設定例:紫)
  highlight CursorIM guibg=Purple guifg=NONE
  " 挿入モード・検索モードでのデフォルトのIME状態設定
  set iminsert=0 imsearch=0
  if has('xim') && has('GUI_GTK')
    " XIMの入力開始キーを設定:
    " 下記の s-space はShift+Spaceの意味でkinput2+canna用設定
    "set imactivatekey=s-space
  endif
  " 挿入モードでのIME状態を記憶させない場合、次行のコメントを解除
  "inoremap <silent> <ESC> <ESC>:set iminsert=0<CR>
endif

" 全角スペースの可視化
" http://inari.hatenablog.com/entry/2014/05/05/231307 (参考)
function! ZenkakuSpace()
    highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=darkgray
endfunction

if has('syntax')
    augroup ZenkakuSpace
        autocmd!
        autocmd ColorScheme * call ZenkakuSpace()
        autocmd VimEnter,WinEnter,BufRead * let w:m1=matchadd('ZenkakuSpace', '　')
    augroup END
    call ZenkakuSpace()
endif

" }}}
"========================================
